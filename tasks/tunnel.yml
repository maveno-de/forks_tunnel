---


- name: Ensure SSH directory
  become: true
  file:
    path: "{{ forksTunnelContextSourceHomeDirectory }}/.ssh"
    state: directory
    owner: "{{ forksTunnelContextSourceSystemUsername }}"
    group: "{{ forksTunnelContextSourceSystemUsername }}"
    mode: 0700

  #RESULT public key: forksTunnelSshKeypairResult.public_key 
- name: Generate SSH keys on source host
  become: true
  community.crypto.openssh_keypair:
    path: "{{ forksTunnelSourceKeyfilePath }}"
    type: ed25519
    owner: "{{ forksTunnelContextSourceSystemUsername }}"
    group: "{{ forksTunnelContextSourceSystemUsername }}"
    mode: 0600
  register: forksTunnelSshKeypairResult

- name: Add SSH public key to target host
  become: true
  delegate_to: "{{ forksTunnelContextTargetHostname }}"
  ansible.posix.authorized_key:
    user: "{{ forksTunnelTargetUsername }}"
    key: "{{ forksTunnelSshKeypairResult.public_key }}"
    key_options: >-
      no-pty{% for tunnelPort in forksTunnelContextTunnelPorts %},permitopen="localhost:{{ tunnelPort }}"{% endfor %}


- name: Remove Forks tunnel SSH public key from known hosts file
  become: true
  become_user: "{{ forksTunnelContextSourceSystemUsername }}"
  known_hosts:
    name: "{{ hostvars[forksTunnelContextTargetHostname]['ansible_host'] }}"
    state: absent
    path: "{{ forksTunnelContextSourceHomeDirectory }}/.ssh/known_hosts"

- name: Scan for Forks tunnel endpoint SSH key
  command: >-
    ssh-keyscan {{ hostvars[forksTunnelContextTargetHostname]['ansible_host'] }}
  register: sshKnownHostsResult
  changed_when: false
  failed_when: false

- name: Add/update the SSH public key for Forks tunnel endpoint SSH key in known hosts file
  become: true
  become_user: "{{ forksTunnelContextSourceSystemUsername }}"
  known_hosts:
    name: "{{ hostvars[forksTunnelContextTargetHostname]['ansible_host'] }}"
    key: "{{ hostvars[forksTunnelContextTargetHostname]['ansible_host'] }} {{ knownHostPubkeyItem
      | regex_replace('^.+[\\s](.+[\\s].+)$', '\\1') }}"
    state: present
    path: "{{ forksTunnelContextSourceHomeDirectory }}/.ssh/known_hosts"
  loop: "{{ sshKnownHostsResult.stdout_lines }}"
  loop_control:
    loop_var: knownHostPubkeyItem


- name: Generate Forks tunnel service file
  become: true
  template:
    src: tunnel.service.j2
    dest: "{{ forksSystemServiceDirectory }}/{{ forksTunnelServiceName }}.service"
    owner: "{{ forksTunnelContextSourceSystemUsername }}"
    group: "{{ forksTunnelContextSourceSystemUsername }}"
    mode: 0600

- name: Start Forks tunnel service
  become: true
  systemd:
    name: "{{ forksTunnelServiceName }}.service"
    state: restarted
    enabled: true
    daemon-reload: true


...
